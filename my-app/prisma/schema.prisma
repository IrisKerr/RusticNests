// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id String @id @default(cuid()) @map("_id")
  username String 
  email String @unique
  profilePic String
  isAdmin Boolean @default(false)
  isActive Boolean @default(true)
  clerkUserId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  properties  Property[]
  queries Query[]
  subscriptions Subscription[]
}

// Subscription model

model Subscription {
  id String @id @default(cuid()) @map("_id")
  userId String
  user User @relation(fields: [userId], references: [id])
  plan Json
  paymentId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Plan

// Property model

model Property {
  id String @id @default(cuid()) @map("_id")
  userId String
  user User @relation(fields: [userId], references: [id])
  name String
  description String
  type String
  status String
  price Float
  town String
  pincode String
  country String
  address String
  bedrooms Int
  bathrooms Int
  balconies Int
  furnishing String
  floors Int
  area String
  land String
  images String[]
  ownerName String
  ownerEmail String
  ownerPhoneNumber String
  showOwnerContact Boolean @default(false)
  isActive Boolean @default(false)
  queries Query[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Query model

model Query {
    id String @id @default(cuid()) @map("_id")
    userId String
    user User @relation(fields: [userId], references: [id])
    propertyId String
    property Property @relation(fields: [propertyId], references: [id])
    name String
    quoteAmount Float
    message String
    email String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
